Journal of what I'm doing with this StockTracker web app
========================================================

----------in reverse chronological order-----------











August 7, 2016
==============
(I've very neglected this journal)

I'm trying to finally deal with a delecate, thorny issue: adding a stock to the
history data store.

I know I've done it before, but I can't find the necessary code.  So far, I can only
find where I add to the histories data store, not the history data store (note spelling diff).
That particular data store, histories, was an early attempt at development, and I went with
the history version instead.

historyCron.php offers some reliable code about updating history each day, but none for
adding an entire history.  Where did I do that??

Meanwhile, I've created php script called addHistory.php to add the history, but again, I don't
know what function to call (should be in MongoToYQLAdapter.php).

BINGO: FOUND IT IN testMergeYQLandMongo.php

So, I added it to MongoToYQLAdapter.php, along with helper function





Currently, I'm working on:
http://localhost/stocktracker/table/stocktracker.html
http://localhost/stocktracker/table/stocks.php 
(obviously(?) in /var/www/html/stock....)
Why this is in the /table directory is that I was practicing making a nice 
table from the Head First HTML/CSS book (because it uses CSS to style the 
table). 
The /stocktracker directory *might* be named (some variant of) rickshaw 
elsewhere (on other computers), because the original idea was to have very nice line graphs of 
my stocks, and I settled on the rickshaw library. 

September 7th, 2015
===================
I majorly messed up my design with hap-hazard ideas.  I'm now working on a test
script called stocktracker/TestMongoToYQLAdapter.php to get my "first principles"
in order. 
First Principles:
-> I can query a lot of stock symbols from YQL in a single query instead of
   in a query for each symbol.  That changes the (m x n) lag into just m 
   (m being the time it takes to query YQL).
-> I'm not going to store 'current' stock data such as current price, since
   those data are immediately stale. 


September 3rd, 2015
===================
TODO: Query YQL for ALL symbols at once: 
My goal now is to query YQL once with ALL 
symbols in one query, rather than querying YQL for each symbol in a loop.  
Doing it the latter way makes the table take 20 seconds to render.  Yikes!  
Doing it the former way should be lightening fast. 

TODO: NO 'current' storage: 
I've realized I shouldn't store 'current' stock info. I
should only store the user-entered stock info such as quantity, date purchased,
symbol, price of purchase, etc. Reason being: every time I refresh the page, it 
should query YQL anyhow, so why bother loading all that into the table to never
be used again. 

TODO: sort by column (asc/desc):
Since YQL and Mongo will have to be queried every time I load the table (perhaps
with some interesting exceptions I may deal with later), why not handle the
column heading sort functionality now.  To begin this process, I'm integrating a
$sortby argument into MongoToYQL_Adapter.getAllStocksByOwner($owner,$sortby). 
The goal is for the resulting array to be in whatever order the user has selected.

Some Prior Date, summer, 2015
=============================


Currently, the page shows a table with dummy values.
                                       ------------
I want to populate it with data from Mongo.                  <----done late June
------------------------------------------
Then I want the Add button to work with AJAX: 
to add a stock purchase asynchronously, and just reload the table,
not the whole page. 

But to summarize for now: i just want to populate the table from mongo.

exercises in storing JSON to MongoDB:
http://localhost/stocktracker/example_storeJSONtoMongo.php



July 2, 2015
============
DONE: populating the table from MongoDB
TODO: Add a purchase to the db & table using a form and AJAX.

This is easier said than done because I want to blend a nice jQuery form with
AJAX feed-back (reload the table of stocks owned).  The adding of the stock
purchase is sent by the form to a PHP script.  

Right now, I can't get the data from the form to transfer (via POST) to the 
PHP script.  So the add functionality is DEAD IN THE WATER.  

various attempts so far (add a purchase to db and table):
http://localhost/stocktracker/stocktracker.php
file:///home/devon/rickshaw_javascript/addStockPopUpButton.html
http://localhost/stocktracker/table/example_AJAX_AddStringToDOM.html 
http://localhost/stocktracker/table/example_formOverlayUsingPOST.html
http://localhost/stocktracker/table/stocks.php <----the main one I want to work

looks very straight forward, source from jQuery:
http://jqueryui.com/dialog/#modal-form


https://jqueryui.com/datepicker/







---------------This method of keeping track was just too....  reliant on discipline.  Please refer to git commit notes instead.



















